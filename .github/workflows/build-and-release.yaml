name: Build and Release

on:
  workflow_dispatch:
    branches:
      - 'v*-stable'
  push:
    branches:
      - 'v*-stable'
    tags:
      - 'v*'
  pull_request:

jobs:
  build:
    name: Build binaries
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.19'

    - name: Go caches
      uses: actions/cache@v3
      with:
        path: |
          ~/go/pkg/mod
        key: ${{ github.job }}-${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ github.job }}-${{ runner.os }}-go-

    - name: Run build
      run: make build

  publish-images:
    name: Build and publish images
    if: github.event_name != 'pull_request'
    runs-on: ubuntu-latest
    needs: build

    strategy:
      fail-fast: false
      matrix:
        brokers: [memory-broker, redis-broker]

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.19'

    - name: Go caches
      uses: actions/cache@v3
      with:
        path: |
          ~/go/pkg/mod
        key: ${{ github.job }}-${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ github.job }}-${{ runner.os }}-go-

    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@v2

    - name: Login to Docker Hub
      if: github.event_name == 'push' && contains(github.ref, 'refs/tags/')
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: DockerHub metadata
      if: github.event_name == 'push' && contains(github.ref, 'refs/tags/')
      id: docker-meta
      uses: docker/metadata-action@v4
      with:
        images: docker.io/triggermesh/${{ matrix.brokers }}
        tags: |
          type=semver,pattern={{raw}}
          type=sha,prefix=,suffix=,format=long

    - name: Build and push images to docker.io
      if: github.event_name == 'push' && contains(github.ref, 'refs/tags/')
      uses: docker/build-push-action@v4
      with:
        context: .
        platforms: linux/amd64,linux/arm64,linux/ppc64le
        file: cmd/${{ matrix.brokers }}/Dockerfile
        push: ${{ github.event_name != 'pull_request' }}
        tags: ${{ steps.docker-meta.outputs.tags }}
        labels: ${{ steps.docker-meta.outputs.labels }}

    - name: Login to GCR
      uses: docker/login-action@v2
      with:
        registry: gcr.io
        username: _json_key
        password: ${{ secrets.GCLOUD_SERVICEACCOUNT_KEY }}

    - name: GCR metadata
      id: gcr-meta
      uses: docker/metadata-action@v4
      with:
        images: gcr.io/triggermesh/${{ matrix.brokers }}
        tags: |
          type=semver,pattern={{raw}}
          type=sha,prefix=,suffix=,format=long

    - name: Build and push image to gcr.io
      uses: docker/build-push-action@v4
      with:
        context: .
        platforms: linux/amd64,linux/arm64,linux/ppc64le
        file: cmd/${{ matrix.brokers }}/Dockerfile
        push: ${{ github.event_name != 'pull_request' }}
        tags: ${{ steps.gcr-meta.outputs.tags }}
        labels: ${{ steps.gcr-meta.outputs.labels }}

  release:
    name: Create Release
    if: github.event_name == 'push' && contains(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    needs: publish-images
    permissions:
      contents: write
    steps:

    - name: Checkout
      uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: 1.19

    - name: Run GoReleaser
      uses: goreleaser/goreleaser-action@v4
      with:
        distribution: goreleaser
        version: latest
        args: release --rm-dist
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
